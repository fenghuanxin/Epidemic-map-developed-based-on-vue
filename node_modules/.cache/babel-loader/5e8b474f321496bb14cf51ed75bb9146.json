{"remainingRequest":"C:\\Users\\55\\Desktop\\Vue-project\\mymap\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\55\\Desktop\\Vue-project\\mymap\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\55\\Desktop\\Vue-project\\mymap\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\55\\Desktop\\Vue-project\\mymap\\src\\components\\HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\55\\Desktop\\Vue-project\\mymap\\src\\components\\HelloWorld.vue","mtime":1586011923709},{"path":"C:\\Users\\55\\Desktop\\Vue-project\\mymap\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1585991814275},{"path":"C:\\Users\\55\\Desktop\\Vue-project\\mymap\\node_modules\\babel-loader\\lib\\index.js","mtime":1585991838730},{"path":"C:\\Users\\55\\Desktop\\Vue-project\\mymap\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1585991814275},{"path":"C:\\Users\\55\\Desktop\\Vue-project\\mymap\\node_modules\\vue-loader\\lib\\index.js","mtime":1585991894791}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBlY2hhcnRzIGZyb20gJ2VjaGFydHMnOwppbXBvcnQgJ2VjaGFydHMvbWFwL2pzL2NoaW5hLmpzJzsKaW1wb3J0IGpzb25wIGZyb20gJ2pzb25wJzsgLy8gIOS9v+eUqOWcsOWbviDpnIDopoHlhYjms6jlhozlnLDlm74KCnZhciBvcHRpb24gPSB7CiAgdGl0bGU6IHsKICAgIHRleHQ6ICfnlqvmg4XlnLDlm74nCiAgfSwKICBzZXJpZXM6IFt7CiAgICB0eXBlOiAnbWFwJywKICAgIC8vIOWRiuiviSBlY2hhcnRzIOa4suafk+WcsOWbvgogICAgbWFwOiAnY2hpbmEnLAogICAgLy8g5ZGK6K+JIGVjaGFydHMg5riy5p+T5Lit5Zu95Zyw5Zu+CiAgICBsYWJlbDogewogICAgICBzaG93OiB0cnVlLAogICAgICAvLyAg5pi+56S65ZCE5Liq55yB5Lu95ZCN56ewCiAgICAgIGZvbnRTaXplOiA4CiAgICB9LAogICAgaXRlbVN0eWxlOiB7CiAgICAgIGFyZWFDb2xvcjogJyNmZmYnIC8vICDljLrln5/nmoTog4zmma/popzoibIKCiAgICB9LAogICAgZW1waGFzaXM6IHsKICAgICAgLy8gIOaOp+WItum8oOagh+a7kei/h+S5i+WQjueahOiDjOaZr+iJsuWSjOWtl+S9k+minOiJsgogICAgICBpdGVtU3R5bGU6IHsKICAgICAgICBhcmVhQ29sb3I6ICcjYzdmZmZkJwogICAgICB9CiAgICB9LAogICAgem9vbTogMS4yIC8v5o6n5Yi25Zyw5Zu+5aSn5bCPCgogIH1dLAogIHZpc3VhbE1hcDogW3sKICAgIHR5cGU6ICdwaWVjZXdpc2UnLAogICAgc2hvdzogdHJ1ZSwKICAgIHNwbGl0TnVtYmVyOiA2LAogICAgcGllY2VzOiBbewogICAgICBtaW46IDEwMDAwCiAgICB9LCB7CiAgICAgIG1pbjogMTAwMCwKICAgICAgbWF4OiA5OTk5CiAgICB9LCB7CiAgICAgIG1pbjogMTAwLAogICAgICBtYXg6IDk5OQogICAgfSwgewogICAgICBtaW46IDEwLAogICAgICBtYXg6IDk5CiAgICB9LCB7CiAgICAgIG1pbjogMSwKICAgICAgbWF4OiA5CiAgICB9LCB7CiAgICAgIG1pbjogMCwKICAgICAgbWF4OiAwCiAgICB9XSwKICAgIC8vICBhbGlnbjogJ3JpZ2h0JyAgLy8gIOm7mOiupGxlZnQKICAgIC8vICBvcmllbnQ6ICdob3Jpem9udGFsJyAvLyDpu5jorqTnq5bnm7QKICAgIC8vICBsZWZ0IHJpZ2h0IOi/meS6m+WxnuaAp+aOp+WItiDliIbmrrXmiYDlnKjkvY3nva4KICAgIC8vICBzaG93TGFiZWw6IGZhbHNlIC8vICDpu5jorqTmmL7npLrmlbDlgLwKICAgIC8vICB0ZXh0U3R5bGU6IHt9CiAgICBpblJhbmdlOiB7CiAgICAgIHN5bWJvbDogJ3JlY3QnLAogICAgICBjb2xvcjogWycjZmZmJywgJyNmZmFhODUnLCAnI2ZmN2I2OScsICcjY2MyOTI5JywgJyM4YzBkMGQnLCAnIzY2MDIwOCddIC8vIOaOp+WItuWIhuauteaVsOWAvOminOiJsuS7juWTquWPmOWTqgoKICAgIH0sCiAgICBpdGVtV2lkdGg6IDIwLAogICAgaXRlbUhlaWdodDogMTAKICB9XSwKICB0b29sdGlwOiB7Ly8gcG9zaXRpb246IGZ1bmN0aW9uIChwb3MsIHBhcmFtcywgZG9tLCByZWN0LCBzaXplKSB7CiAgICAvLyAgICAgICAvLyDpvKDmoIflnKjlt6bkvqfml7YgdG9vbHRpcCDmmL7npLrliLDlj7PkvqfvvIzpvKDmoIflnKjlj7Pkvqfml7YgdG9vbHRpcCDmmL7npLrliLDlt6bkvqfjgIIKICAgIC8vICAgICAgIHZhciBvYmogPSB7dG9wOiA2MH07CiAgICAvLyAgICAgICBvYmpbWydsZWZ0JywgJ3JpZ2h0J11bKyhwb3NbMF0gPCBzaXplLnZpZXdTaXplWzBdIC8gMildXSA9IDU7CiAgICAvLyAgICAgICByZXR1cm4gb2JqOwogICAgLy8gICB9ICAgIAogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdNYXAnLAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldERhdGEoKTsKICAgIHRoaXMubXljaGFydCA9IGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLm1hcGJveCk7CiAgICB0aGlzLm15Y2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXREYXRhOiBmdW5jdGlvbiBnZXREYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAganNvbnAoJ2h0dHBzOi8vaW50ZXJmYWNlLnNpbmEuY24vbmV3cy93YXAvZnltYXAyMDIwX2RhdGEuZC5qc29uP189MTU4MDg5MjUyMjQyNycsIHt9LCBmdW5jdGlvbiAoZXJyLCBkYXRhKSB7CiAgICAgICAgdmFyIGxpc3QgPSBkYXRhLmRhdGEubGlzdC5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSwKICAgICAgICAgICAgdmFsdWU6IGl0ZW0udmFsdWUKICAgICAgICAgIH07CiAgICAgICAgfSk7CiAgICAgICAgY29uc29sZS5sb2cobGlzdCk7CiAgICAgICAgb3B0aW9uLnNlcmllc1swXS5kYXRhID0gbGlzdDsKCiAgICAgICAgX3RoaXMubXljaGFydC5zZXRPcHRpb24ob3B0aW9uKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;AASA,OAAA,OAAA,MAAA,SAAA;AACA,OAAA,yBAAA;AACA,OAAA,KAAA,MAAA,OAAA,C,CAEA;;AACA,IAAA,MAAA,GAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GADA;AAIA,EAAA,MAAA,EAAA,CAAA;AACA,IAAA,IAAA,EAAA,KADA;AACA;AACA,IAAA,GAAA,EAAA,OAFA;AAEA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,IADA;AACA;AACA,MAAA,QAAA,EAAA;AAFA,KAHA;AAOA,IAAA,SAAA,EAAA;AACA,MAAA,SAAA,EAAA,MADA,CACA;;AADA,KAPA;AAUA,IAAA,QAAA,EAAA;AACA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,SAAA,EAAA;AADA;AAFA,KAVA;AAgBA,IAAA,IAAA,EAAA,GAhBA,CAgBA;;AAhBA,GAAA,CAJA;AAsBA,EAAA,SAAA,EAAA,CAAA;AACA,IAAA,IAAA,EAAA,WADA;AAEA,IAAA,IAAA,EAAA,IAFA;AAGA,IAAA,WAAA,EAAA,CAHA;AAIA,IAAA,MAAA,EAAA,CACA;AACA,MAAA,GAAA,EAAA;AADA,KADA,EAIA;AACA,MAAA,GAAA,EAAA,IADA;AAEA,MAAA,GAAA,EAAA;AAFA,KAJA,EAQA;AACA,MAAA,GAAA,EAAA,GADA;AAEA,MAAA,GAAA,EAAA;AAFA,KARA,EAYA;AACA,MAAA,GAAA,EAAA,EADA;AAEA,MAAA,GAAA,EAAA;AAFA,KAZA,EAgBA;AACA,MAAA,GAAA,EAAA,CADA;AAEA,MAAA,GAAA,EAAA;AAFA,KAhBA,EAoBA;AACA,MAAA,GAAA,EAAA,CADA;AAEA,MAAA,GAAA,EAAA;AAFA,KApBA,CAJA;AA8BA;AACA;AACA;AACA;AACA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,MAAA,EAAA,MADA;AAEA,MAAA,KAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,CAFA,CAEA;;AAFA,KAnCA;AAuCA,IAAA,SAAA,EAAA,EAvCA;AAwCA,IAAA,UAAA,EAAA;AAxCA,GAAA,CAtBA;AAgEA,EAAA,OAAA,EAAA,CACA;AACA;AACA;AACA;AACA;AACA;AANA;AAhEA,CAAA;AA0EA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,OAFA,qBAEA;AACA,SAAA,OAAA;AACA,SAAA,OAAA,GAAA,OAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,MAAA,CAAA;AACA,SAAA,OAAA,CAAA,SAAA,CAAA,MAAA;AACA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,MAAA,KAAA,CAAA,0EAAA,EAAA,EAAA,EAAA,UAAA,GAAA,EAAA,IAAA,EAAA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,iBAAA;AACA,YAAA,IAAA,EAAA,IAAA,CAAA,IADA;AAEA,YAAA,KAAA,EAAA,IAAA,CAAA;AAFA,WAAA;AAIA,SALA,CAAA;AAMA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,CAAA,EAAA,IAAA,GAAA,IAAA;;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,SAAA,CAAA,MAAA;AACA,OAVA,CAAA;AAWA;AAbA;AAPA,CAAA","sourcesContent":["<template>\n\t<div class=\"hello\">\n\t\t<!-- 初始化echarts 需要个有宽高的盒子 -->\n\t\t<div ref=\"mapbox\" class=\"box\">\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport echarts from 'echarts'\n\timport 'echarts/map/js/china.js'\n\timport jsonp from 'jsonp'\n\n  //  使用地图 需要先注册地图\n  const option = {\n    title: {\n      text: '疫情地图'\n    },\n    series: [{\n      type: 'map',  // 告诉 echarts 渲染地图\n      map: 'china', // 告诉 echarts 渲染中国地图\n      label: {\n        show: true, //  显示各个省份名称\n        fontSize: 8\n      },\n      itemStyle: {\n        areaColor: '#fff' //  区域的背景颜色\n      },\n      emphasis: {\n        //  控制鼠标滑过之后的背景色和字体颜色\n        itemStyle: {\n          areaColor: '#c7fffd'\n        }\n      },\n      zoom: 1.2,  //控制地图大小\n    }],\n    visualMap: [{\n      type: 'piecewise',\n      show: true,\n      splitNumber: 6,\n      pieces: [\n        {\n          min: 10000\n        },\n        {\n          min: 1000,\n          max: 9999\n        },\n        {\n          min: 100, \n          max: 999\n        },\n        {\n          min: 10, \n          max: 99\n        },\n        {\n          min: 1, \n          max: 9\n        },\n        {\n          min: 0, \n          max: 0\n        }\n      ],\n      \n      //  align: 'right'  //  默认left\n      //  orient: 'horizontal' // 默认竖直\n      //  left right 这些属性控制 分段所在位置\n      //  showLabel: false //  默认显示数值\n      //  textStyle: {}\n      inRange: {\n        symbol: 'rect',\n        color: ['#fff', '#ffaa85', '#ff7b69', '#cc2929', '#8c0d0d', '#660208']  // 控制分段数值颜色从哪变哪\n      },\n      itemWidth: 20,\n      itemHeight: 10\n    }],\n    tooltip: {\n      // position: function (pos, params, dom, rect, size) {\n\t\t\t//       // 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。\n\t\t\t//       var obj = {top: 60};\n\t\t\t//       obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 5;\n\t\t\t//       return obj;\n\t\t\t//   }    \n    },\n  };\n\n  export default {\n    name: 'Map',\n    mounted() {\n      this.getData();\n      this.mychart = echarts.init(this.$refs.mapbox);\n      this.mychart.setOption(option);\n    },\n    methods: {\n      getData() {\n        jsonp('https://interface.sina.cn/news/wap/fymap2020_data.d.json?_=1580892522427',{},(err, data) => {\n          var list = data.data.list.map(item => {\n            return {\n              name: item.name,\n              value: item.value\n            }\n          })\n          console.log(list)\n          option.series[0].data = list;\n          this.mychart.setOption(option);\n        })\n      }\n    }\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\t.box{\n\t\twidth: 750px;\n\t\theight: 650px;\n\t\tmargin: auto;\n\t\t/* border: 2px solid aquamarine; */\n\t}\n</style>\n"],"sourceRoot":"src/components"}]}