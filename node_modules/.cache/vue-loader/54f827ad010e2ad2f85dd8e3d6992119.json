{"remainingRequest":"C:\\Users\\55\\Desktop\\Vue-project\\mymap\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\55\\Desktop\\Vue-project\\mymap\\src\\components\\HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\55\\Desktop\\Vue-project\\mymap\\src\\components\\HelloWorld.vue","mtime":1586011923709},{"path":"C:\\Users\\55\\Desktop\\Vue-project\\mymap\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1585991814275},{"path":"C:\\Users\\55\\Desktop\\Vue-project\\mymap\\node_modules\\babel-loader\\lib\\index.js","mtime":1585991838730},{"path":"C:\\Users\\55\\Desktop\\Vue-project\\mymap\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1585991814275},{"path":"C:\\Users\\55\\Desktop\\Vue-project\\mymap\\node_modules\\vue-loader\\lib\\index.js","mtime":1585991894791}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCglpbXBvcnQgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJwoJaW1wb3J0ICdlY2hhcnRzL21hcC9qcy9jaGluYS5qcycKCWltcG9ydCBqc29ucCBmcm9tICdqc29ucCcKCiAgLy8gIOS9v+eUqOWcsOWbviDpnIDopoHlhYjms6jlhozlnLDlm74KICBjb25zdCBvcHRpb24gPSB7CiAgICB0aXRsZTogewogICAgICB0ZXh0OiAn55ar5oOF5Zyw5Zu+JwogICAgfSwKICAgIHNlcmllczogW3sKICAgICAgdHlwZTogJ21hcCcsICAvLyDlkYror4kgZWNoYXJ0cyDmuLLmn5PlnLDlm74KICAgICAgbWFwOiAnY2hpbmEnLCAvLyDlkYror4kgZWNoYXJ0cyDmuLLmn5PkuK3lm73lnLDlm74KICAgICAgbGFiZWw6IHsKICAgICAgICBzaG93OiB0cnVlLCAvLyAg5pi+56S65ZCE5Liq55yB5Lu95ZCN56ewCiAgICAgICAgZm9udFNpemU6IDgKICAgICAgfSwKICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgYXJlYUNvbG9yOiAnI2ZmZicgLy8gIOWMuuWfn+eahOiDjOaZr+minOiJsgogICAgICB9LAogICAgICBlbXBoYXNpczogewogICAgICAgIC8vICDmjqfliLbpvKDmoIfmu5Hov4fkuYvlkI7nmoTog4zmma/oibLlkozlrZfkvZPpopzoibIKICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgIGFyZWFDb2xvcjogJyNjN2ZmZmQnCiAgICAgICAgfQogICAgICB9LAogICAgICB6b29tOiAxLjIsICAvL+aOp+WItuWcsOWbvuWkp+WwjwogICAgfV0sCiAgICB2aXN1YWxNYXA6IFt7CiAgICAgIHR5cGU6ICdwaWVjZXdpc2UnLAogICAgICBzaG93OiB0cnVlLAogICAgICBzcGxpdE51bWJlcjogNiwKICAgICAgcGllY2VzOiBbCiAgICAgICAgewogICAgICAgICAgbWluOiAxMDAwMAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbWluOiAxMDAwLAogICAgICAgICAgbWF4OiA5OTk5CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBtaW46IDEwMCwgCiAgICAgICAgICBtYXg6IDk5OQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbWluOiAxMCwgCiAgICAgICAgICBtYXg6IDk5CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBtaW46IDEsIAogICAgICAgICAgbWF4OiA5CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBtaW46IDAsIAogICAgICAgICAgbWF4OiAwCiAgICAgICAgfQogICAgICBdLAogICAgICAKICAgICAgLy8gIGFsaWduOiAncmlnaHQnICAvLyAg6buY6K6kbGVmdAogICAgICAvLyAgb3JpZW50OiAnaG9yaXpvbnRhbCcgLy8g6buY6K6k56uW55u0CiAgICAgIC8vICBsZWZ0IHJpZ2h0IOi/meS6m+WxnuaAp+aOp+WItiDliIbmrrXmiYDlnKjkvY3nva4KICAgICAgLy8gIHNob3dMYWJlbDogZmFsc2UgLy8gIOm7mOiupOaYvuekuuaVsOWAvAogICAgICAvLyAgdGV4dFN0eWxlOiB7fQogICAgICBpblJhbmdlOiB7CiAgICAgICAgc3ltYm9sOiAncmVjdCcsCiAgICAgICAgY29sb3I6IFsnI2ZmZicsICcjZmZhYTg1JywgJyNmZjdiNjknLCAnI2NjMjkyOScsICcjOGMwZDBkJywgJyM2NjAyMDgnXSAgLy8g5o6n5Yi25YiG5q615pWw5YC86aKc6Imy5LuO5ZOq5Y+Y5ZOqCiAgICAgIH0sCiAgICAgIGl0ZW1XaWR0aDogMjAsCiAgICAgIGl0ZW1IZWlnaHQ6IDEwCiAgICB9XSwKICAgIHRvb2x0aXA6IHsKICAgICAgLy8gcG9zaXRpb246IGZ1bmN0aW9uIChwb3MsIHBhcmFtcywgZG9tLCByZWN0LCBzaXplKSB7CgkJCS8vICAgICAgIC8vIOm8oOagh+WcqOW3puS+p+aXtiB0b29sdGlwIOaYvuekuuWIsOWPs+S+p++8jOm8oOagh+WcqOWPs+S+p+aXtiB0b29sdGlwIOaYvuekuuWIsOW3puS+p+OAggoJCQkvLyAgICAgICB2YXIgb2JqID0ge3RvcDogNjB9OwoJCQkvLyAgICAgICBvYmpbWydsZWZ0JywgJ3JpZ2h0J11bKyhwb3NbMF0gPCBzaXplLnZpZXdTaXplWzBdIC8gMildXSA9IDU7CgkJCS8vICAgICAgIHJldHVybiBvYmo7CgkJCS8vICAgfSAgICAKICAgIH0sCiAgfTsKCiAgZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ01hcCcsCiAgICBtb3VudGVkKCkgewogICAgICB0aGlzLmdldERhdGEoKTsKICAgICAgdGhpcy5teWNoYXJ0ID0gZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMubWFwYm94KTsKICAgICAgdGhpcy5teWNoYXJ0LnNldE9wdGlvbihvcHRpb24pOwogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgZ2V0RGF0YSgpIHsKICAgICAgICBqc29ucCgnaHR0cHM6Ly9pbnRlcmZhY2Uuc2luYS5jbi9uZXdzL3dhcC9meW1hcDIwMjBfZGF0YS5kLmpzb24/Xz0xNTgwODkyNTIyNDI3Jyx7fSwoZXJyLCBkYXRhKSA9PiB7CiAgICAgICAgICB2YXIgbGlzdCA9IGRhdGEuZGF0YS5saXN0Lm1hcChpdGVtID0+IHsKICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICBuYW1lOiBpdGVtLm5hbWUsCiAgICAgICAgICAgICAgdmFsdWU6IGl0ZW0udmFsdWUKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICAgIGNvbnNvbGUubG9nKGxpc3QpCiAgICAgICAgICBvcHRpb24uc2VyaWVzWzBdLmRhdGEgPSBsaXN0OwogICAgICAgICAgdGhpcy5teWNoYXJ0LnNldE9wdGlvbihvcHRpb24pOwogICAgICAgIH0pCiAgICAgIH0KICAgIH0KICB9Cg=="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div class=\"hello\">\n\t\t<!-- 初始化echarts 需要个有宽高的盒子 -->\n\t\t<div ref=\"mapbox\" class=\"box\">\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport echarts from 'echarts'\n\timport 'echarts/map/js/china.js'\n\timport jsonp from 'jsonp'\n\n  //  使用地图 需要先注册地图\n  const option = {\n    title: {\n      text: '疫情地图'\n    },\n    series: [{\n      type: 'map',  // 告诉 echarts 渲染地图\n      map: 'china', // 告诉 echarts 渲染中国地图\n      label: {\n        show: true, //  显示各个省份名称\n        fontSize: 8\n      },\n      itemStyle: {\n        areaColor: '#fff' //  区域的背景颜色\n      },\n      emphasis: {\n        //  控制鼠标滑过之后的背景色和字体颜色\n        itemStyle: {\n          areaColor: '#c7fffd'\n        }\n      },\n      zoom: 1.2,  //控制地图大小\n    }],\n    visualMap: [{\n      type: 'piecewise',\n      show: true,\n      splitNumber: 6,\n      pieces: [\n        {\n          min: 10000\n        },\n        {\n          min: 1000,\n          max: 9999\n        },\n        {\n          min: 100, \n          max: 999\n        },\n        {\n          min: 10, \n          max: 99\n        },\n        {\n          min: 1, \n          max: 9\n        },\n        {\n          min: 0, \n          max: 0\n        }\n      ],\n      \n      //  align: 'right'  //  默认left\n      //  orient: 'horizontal' // 默认竖直\n      //  left right 这些属性控制 分段所在位置\n      //  showLabel: false //  默认显示数值\n      //  textStyle: {}\n      inRange: {\n        symbol: 'rect',\n        color: ['#fff', '#ffaa85', '#ff7b69', '#cc2929', '#8c0d0d', '#660208']  // 控制分段数值颜色从哪变哪\n      },\n      itemWidth: 20,\n      itemHeight: 10\n    }],\n    tooltip: {\n      // position: function (pos, params, dom, rect, size) {\n\t\t\t//       // 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。\n\t\t\t//       var obj = {top: 60};\n\t\t\t//       obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 5;\n\t\t\t//       return obj;\n\t\t\t//   }    \n    },\n  };\n\n  export default {\n    name: 'Map',\n    mounted() {\n      this.getData();\n      this.mychart = echarts.init(this.$refs.mapbox);\n      this.mychart.setOption(option);\n    },\n    methods: {\n      getData() {\n        jsonp('https://interface.sina.cn/news/wap/fymap2020_data.d.json?_=1580892522427',{},(err, data) => {\n          var list = data.data.list.map(item => {\n            return {\n              name: item.name,\n              value: item.value\n            }\n          })\n          console.log(list)\n          option.series[0].data = list;\n          this.mychart.setOption(option);\n        })\n      }\n    }\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\t.box{\n\t\twidth: 750px;\n\t\theight: 650px;\n\t\tmargin: auto;\n\t\t/* border: 2px solid aquamarine; */\n\t}\n</style>\n"]}]}